import { NextResponse } from "next/server";
import mysql from "mysql2/promise";

// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MySQL
const pool = mysql.createPool({
  host: "localhost",
  user: "root",
  password: "",
  database: "hospital_booking",
  waitForConnections: true,
  connectionLimit: 10,
});

// ‚úÖ GET: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢ citizenId
export async function GET(req: Request) {
  try {
    const { searchParams } = new URL(req.url);
    const citizenId = searchParams.get("citizenId");

    if (!citizenId) {
      return NextResponse.json(
        { error: "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ citizenId" },
        { status: 400 }
      );
    }

    const connection = await pool.getConnection();

    // üîç Query ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤
    const [rows] = await connection.execute(
      "SELECT citizenId, prefix, name, phone, birthday FROM user WHERE citizenId = ?",
      [citizenId]
    );

    connection.release();

    const users = rows as any[];

    if (users.length === 0) {
      return NextResponse.json(
        { error: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" },
        { status: 404 }
      );
    }

    const user = users[0];

    return NextResponse.json({
      citizenId: user.citizenId,
      prefix: user.prefix ?? "", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ prefix
      name: user.name,
      phone: user.phone,
      birthday: user.birthday
        ? new Date(user.birthday).toISOString().split("T")[0]
        : null,
    });
  } catch (error) {
    console.error("üö® Error fetching user:", error);
    return NextResponse.json(
      { error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" },
      { status: 500 }
    );
  }
}
